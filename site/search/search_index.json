{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"AIHint Standard Documentation","text":"<p>Welcome to the AIHint Standard documentation! AIHint is an open standard for exposing signed, verifiable metadata for websites, intended to be read by AI systems, LLMs, and intelligent agents.</p>"},{"location":"index.html#what-is-aihint","title":"What is AIHint?","text":"<p>AIHint allows any AI system to: - Discover a well-known, machine-readable JSON file on a website - Verify its cryptographic signature - Understand the site's declared trust score and metadata</p>"},{"location":"index.html#quick-start","title":"Quick Start","text":"<pre><code># Install AIHint\npip install aihint\n\n# Create your first AIHint\naihint create \\\n  --target \"https://example.com\" \\\n  --issuer \"https://trust.aihint.org\" \\\n  --score 0.92 \\\n  --method \"aihint-core-v1\" \\\n  --public-key-url \"https://trust.aihint.org/pubkey.pem\" \\\n  --private-key \"private_key.pem\" \\\n  --output \"aihint.json\"\n</code></pre>"},{"location":"index.html#key-features","title":"Key Features","text":"<ul> <li>Cryptographic Signatures: RSA 2048-bit with SHA-256</li> <li>Trust Scoring: 0.0-1.0 scale with customizable methods</li> <li>Expiration: Built-in expiration dates for security</li> <li>Validation: Comprehensive schema and signature validation</li> <li>CLI Tools: Easy-to-use command-line interface</li> <li>Python API: Full programmatic access</li> </ul>"},{"location":"index.html#documentation-sections","title":"Documentation Sections","text":"<ul> <li>Getting Started - Quick start guide and installation</li> <li>User Guide - Implementation guide and API reference</li> <li>Technical Reference - Security considerations and technical details</li> <li>Contributing - How to contribute to the project</li> </ul>"},{"location":"index.html#file-location","title":"File Location","text":"<p>AIHint files should be placed at: <pre><code>https://example.com/.well-known/aihint.json\n</code></pre></p>"},{"location":"index.html#example-aihint-file","title":"Example AIHint File","text":"<pre><code>{\n  \"version\": \"0.1\",\n  \"type\": \"global\",\n  \"target\": \"https://example.com\",\n  \"issuer\": \"https://trust.aihint.org\",\n  \"score\": 0.92,\n  \"method\": \"aihint-core-v1\",\n  \"issued_at\": \"2025-01-01T12:00:00Z\",\n  \"expires_at\": \"2026-01-01T00:00:00Z\",\n  \"comment\": \"Example AIHint for demonstration\",\n  \"signature\": \"base64-signature-here\",\n  \"public_key_url\": \"https://trust.aihint.org/pubkey.pem\"\n}\n</code></pre>"},{"location":"index.html#security","title":"Security","text":"<p>AIHint is designed with security in mind. See our Security Considerations for best practices and potential attack vectors.</p>"},{"location":"index.html#contributing","title":"Contributing","text":"<p>We welcome contributions! Please see our Contributing Guide and Code of Conduct. </p>"},{"location":"contributing/code-of-conduct.html","title":"Contributor Covenant Code of Conduct","text":""},{"location":"contributing/code-of-conduct.html#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"contributing/code-of-conduct.html#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"contributing/code-of-conduct.html#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"contributing/code-of-conduct.html#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces.</p>"},{"location":"contributing/code-of-conduct.html#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at [INSERT CONTACT METHOD]. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"contributing/code-of-conduct.html#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"contributing/code-of-conduct.html#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"contributing/code-of-conduct.html#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"contributing/code-of-conduct.html#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"contributing/code-of-conduct.html#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"contributing/code-of-conduct.html#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations. </p>"},{"location":"contributing/contributing.html","title":"Contributing to AIHint","text":"<p>Thank you for your interest in contributing to AIHint! This document provides guidelines and information for contributors.</p>"},{"location":"contributing/contributing.html#code-of-conduct","title":"Code of Conduct","text":"<p>This project adheres to our Code of Conduct. By participating, you are expected to uphold this code.</p>"},{"location":"contributing/contributing.html#how-can-i-contribute","title":"How Can I Contribute?","text":""},{"location":"contributing/contributing.html#reporting-bugs","title":"Reporting Bugs","text":"<ul> <li>Use the GitHub issue tracker</li> <li>Include detailed steps to reproduce</li> <li>Provide environment information (OS, Python version, etc.)</li> </ul>"},{"location":"contributing/contributing.html#suggesting-enhancements","title":"Suggesting Enhancements","text":"<ul> <li>Open a feature request issue</li> <li>Describe the use case and benefits</li> <li>Consider implementation complexity</li> </ul>"},{"location":"contributing/contributing.html#code-contributions","title":"Code Contributions","text":"<ul> <li>Fork the repository</li> <li>Create a feature branch (<code>git checkout -b feature/amazing-feature</code>)</li> <li>Make your changes</li> <li>Add tests for new functionality</li> <li>Ensure all tests pass</li> <li>Update documentation if needed</li> <li>Submit a pull request</li> </ul>"},{"location":"contributing/contributing.html#development-setup","title":"Development Setup","text":"<ol> <li> <p>Fork and clone the repository <pre><code>git clone https://github.com/Ai-Hint/aihint-standard.git\ncd aihint-standard\n</code></pre></p> </li> <li> <p>Install dependencies <pre><code>pip install -r requirements.txt\npip install -e .\n</code></pre></p> </li> <li> <p>Run tests <pre><code>pytest tests/ -v\n</code></pre></p> </li> </ol>"},{"location":"contributing/contributing.html#code-style","title":"Code Style","text":"<ul> <li>Follow PEP 8 for Python code</li> <li>Use type hints where appropriate</li> <li>Write docstrings for all public functions</li> <li>Keep functions focused and concise</li> </ul>"},{"location":"contributing/contributing.html#testing","title":"Testing","text":"<ul> <li>Write tests for new functionality</li> <li>Ensure existing tests continue to pass</li> <li>Aim for good test coverage</li> <li>Use descriptive test names</li> </ul>"},{"location":"contributing/contributing.html#documentation","title":"Documentation","text":"<ul> <li>Update relevant documentation when adding features</li> <li>Include examples for new functionality</li> <li>Keep API documentation current</li> </ul>"},{"location":"contributing/contributing.html#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Update the README.md with details of changes if applicable</li> <li>Update the CHANGELOG.md with a note describing your changes</li> <li>The PR will be merged once you have the sign-off of at least one maintainer</li> </ol>"},{"location":"contributing/contributing.html#release-process","title":"Release Process","text":"<ol> <li>Update version in <code>setup.py</code> and <code>aihint/__init__.py</code></li> <li>Update CHANGELOG.md</li> <li>Create a release tag</li> <li>Publish to PyPI (if applicable)</li> </ol>"},{"location":"contributing/contributing.html#questions","title":"Questions?","text":"<p>If you have questions about contributing, please open an issue or reach out to the maintainers.</p> <p>Thank you for contributing to AIHint! </p>"},{"location":"contributing/security.html","title":"Security Policy","text":"<p>If you discover a security vulnerability in AIHint, please report it responsibly.</p> <ul> <li>Email: contact@aihint.org</li> <li>GitHub Issues: Security advisories</li> </ul>"},{"location":"contributing/security.html#supported-versions","title":"Supported Versions","text":"Version Supported 0.1.x \u2705"},{"location":"contributing/security.html#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<ol> <li>Do not open a public issue for security problems.</li> <li>Email us or use GitHub security advisories.</li> <li>We will coordinate a fix and disclosure.</li> </ol> <p>Thank you for helping keep AIHint safe! </p>"},{"location":"getting-started/installation.html","title":"Installation Guide","text":""},{"location":"getting-started/installation.html#requirements","title":"Requirements","text":"<ul> <li>Python 3.8 or higher</li> <li>pip (Python package installer)</li> </ul>"},{"location":"getting-started/installation.html#installation-options","title":"Installation Options","text":""},{"location":"getting-started/installation.html#option-1-install-from-source-recommended","title":"Option 1: Install from Source (Recommended)","text":"<pre><code># Clone the repository\ngit clone https://github.com/aihint/aihint-standard.git\ncd aihint-standard\n\n# Install in development mode\npip install -e .\n</code></pre>"},{"location":"getting-started/installation.html#option-2-install-dependencies-only","title":"Option 2: Install Dependencies Only","text":"<pre><code># Install required dependencies\npip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/installation.html#option-3-install-from-pypi-future","title":"Option 3: Install from PyPI (Future)","text":"<pre><code># When available on PyPI\npip install aihint\n</code></pre>"},{"location":"getting-started/installation.html#dependencies","title":"Dependencies","text":"<p>The following packages are required:</p> <ul> <li><code>cryptography&gt;=41.0.0</code> - Cryptographic operations</li> <li><code>requests&gt;=2.31.0</code> - HTTP requests for key fetching</li> <li><code>jsonschema&gt;=4.19.0</code> - JSON schema validation</li> <li><code>click&gt;=8.1.0</code> - CLI framework</li> <li><code>pydantic&gt;=2.4.0</code> - Data validation</li> <li><code>pytest&gt;=7.0.0</code> - Testing framework</li> </ul>"},{"location":"getting-started/installation.html#verification","title":"Verification","text":"<p>After installation, verify that AIHint is working:</p> <pre><code># Check CLI is available\naihint --help\n\n# Run tests\npython -m pytest tests/ -v\n\n# Run example\npython examples/create_hint.py\n</code></pre>"},{"location":"getting-started/installation.html#development-setup","title":"Development Setup","text":"<p>For contributors:</p> <pre><code># Install development dependencies\npip install -r requirements.txt\npip install -r docs-requirements.txt\n\n# Install in development mode\npip install -e .\n\n# Run tests\npytest tests/ -v\n\n# Build documentation\nmkdocs build\n</code></pre>"},{"location":"getting-started/installation.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation.html#common-issues","title":"Common Issues","text":"<ol> <li>Import Error: Make sure you're in the correct directory and have installed the package</li> <li>Permission Error: Use <code>pip install --user</code> or create a virtual environment</li> <li>Missing Dependencies: Run <code>pip install -r requirements.txt</code></li> </ol>"},{"location":"getting-started/installation.html#virtual-environment-recommended","title":"Virtual Environment (Recommended)","text":"<pre><code># Create virtual environment\npython -m venv aihint-env\n\n# Activate (Linux/Mac)\nsource aihint-env/bin/activate\n\n# Activate (Windows)\naihint-env\\Scripts\\activate\n\n# Install\npip install -e .\n</code></pre>"},{"location":"getting-started/quick-start.html","title":"Quick Start Guide","text":"<p>Get up and running with AIHint in minutes!</p>"},{"location":"getting-started/quick-start.html#installation","title":"Installation","text":"<pre><code># Install from source\ngit clone https://github.com/Ai-Hint/aihint-standard.git\ncd aihint-standard\npip install -e .\n\n# Or install dependencies directly\npip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/quick-start.html#create-your-first-aihint","title":"Create Your First AIHint","text":""},{"location":"getting-started/quick-start.html#step-1-generate-keys","title":"Step 1: Generate Keys","text":"<pre><code># Generate RSA key pair\nopenssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048\nopenssl rsa -pubout -in private_key.pem -out public_key.pem\n</code></pre>"},{"location":"getting-started/quick-start.html#step-2-create-aihint","title":"Step 2: Create AIHint","text":"<pre><code># Create a signed AIHint metadata file\naihint create \\\n  --target \"https://example.com\" \\\n  --issuer \"https://trust.aihint.org\" \\\n  --score 0.92 \\\n  --method \"aihint-core-v1\" \\\n  --public-key-url \"https://trust.aihint.org/pubkey.pem\" \\\n  --private-key \"private_key.pem\" \\\n  --output \"aihint.json\"\n</code></pre>"},{"location":"getting-started/quick-start.html#step-3-validate-and-verify","title":"Step 3: Validate and Verify","text":"<pre><code># Validate the AIHint file\naihint validate aihint.json\n\n# Verify the signature\naihint verify aihint.json\n\n# Get detailed information\naihint info aihint.json\n</code></pre>"},{"location":"getting-started/quick-start.html#python-api","title":"Python API","text":"<pre><code>from aihint import AIHint\nfrom datetime import datetime, timezone, timedelta\n\n# Create AIHint instance\naihint = AIHint()\n\n# Create a new hint\nexpires_at = datetime.now(timezone.utc) + timedelta(days=365)\nhint = aihint.create_global_hint(\n    target=\"https://example.com\",\n    issuer=\"https://trust.aihint.org\",\n    score=0.92,\n    method=\"aihint-core-v1\",\n    public_key_url=\"https://trust.aihint.org/pubkey.pem\",\n    expires_at=expires_at,\n    comment=\"My website trust metadata\"\n)\n\n# Sign the hint\nsigned_hint = aihint.sign_hint(hint, \"private_key.pem\")\n\n# Save to file\naihint.save_hint(signed_hint, \"aihint.json\")\n\n# Validate and verify\nprint(aihint.validate_hint(signed_hint))  # True\nprint(aihint.verify_hint(signed_hint))    # True\n</code></pre>"},{"location":"getting-started/quick-start.html#next-steps","title":"Next Steps","text":"<ul> <li>Read the Implementation Guide for detailed instructions</li> <li>Check out the Security Considerations for best practices</li> <li>Explore the Python API for advanced usage </li> </ul>"},{"location":"technical/faq.html","title":"AIHint FAQ","text":"<p>Q: What is AIHint? A: An open standard for signed, verifiable website metadata for AI systems.</p> <p>Q: Where should I host my AIHint file? A: At <code>https://yourdomain.com/.well-known/aihint.json</code>.</p> <p>Q: How do I generate keys? A: Use OpenSSL or the provided example script. See the Implementation Guide.</p> <p>Q: What if my private key is compromised? A: Revoke the key, generate a new one, and update your AIHint file and public key URL.</p> <p>Q: Can I use algorithms other than RSA? A: Not in v0.1. Future versions may support more.</p> <p>Q: How do I validate or verify a hint? A: Use the CLI: <code>aihint validate</code> and <code>aihint verify</code>.</p> <p>Q: What is the trust score? A: A value (0.0\u20131.0) representing the issuer's assessment of the domain's trustworthiness.</p> <p>Q: Can I issue my own hints? A: Yes, but trust depends on your reputation as an issuer. </p>"},{"location":"technical/security-considerations.html","title":"AIHint Security Considerations","text":"<p>AIHint is designed to provide verifiable, tamper-evident metadata for websites. Security is critical to its trustworthiness.</p>"},{"location":"technical/security-considerations.html#signature-algorithms","title":"Signature Algorithms","text":"<ul> <li>Default: RSA 2048-bit with SHA-256</li> <li>Padding: PKCS#1 v1.5</li> <li>Encoding: Base64</li> </ul>"},{"location":"technical/security-considerations.html#key-management","title":"Key Management","text":"<ul> <li>Keep private keys secure and offline when possible</li> <li>Rotate keys regularly</li> <li>Use strong, unique passphrases for key storage</li> </ul>"},{"location":"technical/security-considerations.html#attack-vectors","title":"Attack Vectors","text":"<ul> <li>Key compromise: If a private key is leaked, all issued hints can be forged</li> <li>Replay attacks: Use <code>issued_at</code> and <code>expires_at</code> to limit hint validity</li> <li>Man-in-the-middle: Always fetch public keys and aihint.json over HTTPS</li> <li>Signature algorithm downgrade: Only accept strong, documented algorithms</li> </ul>"},{"location":"technical/security-considerations.html#recommendations","title":"Recommendations","text":"<ul> <li>Validate all fields and signatures before trusting a hint</li> <li>Monitor for revoked or expired keys</li> <li>Use trusted authorities for <code>issuer</code> and <code>public_key_url</code></li> <li>Consider using certificate transparency or public key pinning for issuers </li> </ul>"},{"location":"technical/signatures.html","title":"AIHint Signature Algorithm","text":""},{"location":"technical/signatures.html#algorithm","title":"Algorithm","text":"<ul> <li>Type: RSA</li> <li>Key Size: 2048 bits (minimum)</li> <li>Hash: SHA-256</li> <li>Padding: PKCS#1 v1.5</li> <li>Encoding: Base64</li> </ul>"},{"location":"technical/signatures.html#signing-process","title":"Signing Process","text":"<ol> <li>Remove the <code>signature</code> field from the JSON object.</li> <li>Sort all keys alphabetically.</li> <li>Serialize to canonical JSON (no whitespace, sorted keys).</li> <li>Sign the resulting bytes with the issuer's private RSA key.</li> <li>Encode the signature in Base64 and insert as the <code>signature</code> field.</li> </ol>"},{"location":"technical/signatures.html#verification-process","title":"Verification Process","text":"<ol> <li>Remove the <code>signature</code> field from the JSON object.</li> <li>Sort all keys alphabetically.</li> <li>Serialize to canonical JSON (no whitespace, sorted keys).</li> <li>Fetch the issuer's public key from <code>public_key_url</code>.</li> <li>Verify the signature using RSA/SHA-256.</li> </ol>"},{"location":"technical/signatures.html#example","title":"Example","text":"<p>See <code>examples/create_hint.py</code> for a full signing workflow. </p>"},{"location":"user-guide/cli-reference.html","title":"CLI Reference","text":"<p>The AIHint command-line interface provides easy access to all AIHint functionality.</p>"},{"location":"user-guide/cli-reference.html#commands-overview","title":"Commands Overview","text":"<pre><code>aihint --help\n</code></pre>"},{"location":"user-guide/cli-reference.html#commands","title":"Commands","text":""},{"location":"user-guide/cli-reference.html#aihint-create","title":"<code>aihint create</code>","text":"<p>Create a new AIHint metadata file.</p> <p>Options: - <code>--target</code> - Target domain URL (required) - <code>--issuer</code> - Issuing authority URL (required) - <code>--score</code> - Trust score 0.0-1.0 (required) - <code>--method</code> - Scoring method used (required) - <code>--public-key-url</code> - Public key URL (required) - <code>--expires-in</code> - Expiration in days (default: 365) - <code>--comment</code> - Optional comment - <code>--output</code> - Output file path - <code>--private-key</code> - Private key file for signing - <code>--version</code> - AIHint version (default: 0.1)</p> <p>Example: <pre><code>aihint create \\\n  --target \"https://example.com\" \\\n  --issuer \"https://trust.aihint.org\" \\\n  --score 0.92 \\\n  --method \"aihint-core-v1\" \\\n  --public-key-url \"https://trust.aihint.org/pubkey.pem\" \\\n  --private-key \"private_key.pem\" \\\n  --output \"aihint.json\"\n</code></pre></p>"},{"location":"user-guide/cli-reference.html#aihint-validate","title":"<code>aihint validate</code>","text":"<p>Validate an AIHint metadata file.</p> <p>Usage: <pre><code>aihint validate &lt;file_path&gt;\n</code></pre></p> <p>Example: <pre><code>aihint validate aihint.json\n</code></pre></p>"},{"location":"user-guide/cli-reference.html#aihint-verify","title":"<code>aihint verify</code>","text":"<p>Verify an AIHint metadata file signature.</p> <p>Usage: <pre><code>aihint verify &lt;file_path&gt;\n</code></pre></p> <p>Example: <pre><code>aihint verify aihint.json\n</code></pre></p>"},{"location":"user-guide/cli-reference.html#aihint-info","title":"<code>aihint info</code>","text":"<p>Display information about an AIHint metadata file.</p> <p>Usage: <pre><code>aihint info &lt;file_path&gt;\n</code></pre></p> <p>Example: <pre><code>aihint info aihint.json\n</code></pre></p> <p>Output: <pre><code>AIHint Information:\n  Version: 0.1\n  Type: global\n  Target: https://example.com\n  Issuer: https://trust.aihint.org\n  Score: 0.92\n  Method: aihint-core-v1\n  Issued: 2025-01-01T12:00:00Z\n  Expires: 2026-01-01T00:00:00Z\n  Comment: Example AIHint\n  Status: Valid (365 days left)\n</code></pre></p>"},{"location":"user-guide/cli-reference.html#aihint-sign","title":"<code>aihint sign</code>","text":"<p>Sign an existing AIHint metadata file.</p> <p>Usage: <pre><code>aihint sign &lt;file_path&gt; --private-key &lt;key_path&gt;\n</code></pre></p> <p>Example: <pre><code>aihint sign aihint.json --private-key private_key.pem\n</code></pre></p>"},{"location":"user-guide/cli-reference.html#global-options","title":"Global Options","text":"<ul> <li><code>--help</code> - Show help message</li> <li><code>--version</code> - Show version and exit</li> </ul>"},{"location":"user-guide/cli-reference.html#exit-codes","title":"Exit Codes","text":"<ul> <li><code>0</code> - Success</li> <li><code>1</code> - Error (with error message)</li> <li><code>2</code> - Usage error (invalid arguments) </li> </ul>"},{"location":"user-guide/implementation-guide.html","title":"AIHint Implementation Guide","text":"<p>This guide walks you through integrating AIHint into your website or service.</p>"},{"location":"user-guide/implementation-guide.html#1-generate-key-pair","title":"1. Generate Key Pair","text":"<pre><code>openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048\nopenssl rsa -pubout -in private_key.pem -out public_key.pem\n</code></pre>"},{"location":"user-guide/implementation-guide.html#2-create-aihint-metadata","title":"2. Create AIHint Metadata","text":"<p>Use the CLI or Python API:</p> <pre><code>aihint create \\\n  --target \"https://yourdomain.com\" \\\n  --issuer \"https://your-issuer.com\" \\\n  --score 0.95 \\\n  --method \"aihint-core-v1\" \\\n  --public-key-url \"https://your-issuer.com/pubkey.pem\" \\\n  --private-key private_key.pem \\\n  --output .well-known/aihint.json\n</code></pre>"},{"location":"user-guide/implementation-guide.html#3-publish-files","title":"3. Publish Files","text":"<ul> <li>Place <code>aihint.json</code> at <code>https://yourdomain.com/.well-known/aihint.json</code></li> <li>Host your public key at the <code>public_key_url</code></li> </ul>"},{"location":"user-guide/implementation-guide.html#4-verification","title":"4. Verification","text":"<ul> <li>Use the CLI or Python API to verify your hint: <pre><code>aihint verify .well-known/aihint.json\n</code></pre></li> </ul>"},{"location":"user-guide/implementation-guide.html#5-rotate-keys-recommended","title":"5. Rotate Keys (Recommended)","text":"<ul> <li>Generate new keys periodically</li> <li>Update <code>public_key_url</code> and re-sign your hints</li> </ul>"},{"location":"user-guide/implementation-guide.html#6-example","title":"6. Example","text":"<p>See <code>examples/create_hint.py</code> for a full workflow. </p>"},{"location":"user-guide/python-api.html","title":"AIHint API Reference","text":""},{"location":"user-guide/python-api.html#python-library","title":"Python Library","text":""},{"location":"user-guide/python-api.html#classes","title":"Classes","text":"<ul> <li><code>AIHint</code> \u2014 Main interface for creating, signing, validating, and verifying hints</li> <li><code>AIHintGlobal</code> \u2014 Data model for global hints</li> <li><code>AIHintValidator</code> \u2014 Schema validation</li> <li><code>AIHintSigner</code> \u2014 Signing utility</li> <li><code>AIHintVerifier</code> \u2014 Signature verification utility</li> </ul>"},{"location":"user-guide/python-api.html#methods","title":"Methods","text":"<ul> <li><code>AIHint.create_global_hint(...)</code></li> <li><code>AIHint.sign_hint(hint, private_key_path)</code></li> <li><code>AIHint.validate_hint(hint)</code></li> <li><code>AIHint.verify_hint(hint)</code></li> <li><code>AIHint.save_hint(hint, file_path)</code></li> <li><code>AIHint.load_hint(file_path)</code></li> </ul>"},{"location":"user-guide/python-api.html#cli-commands","title":"CLI Commands","text":"<ul> <li><code>aihint create</code> \u2014 Create and (optionally) sign a hint</li> <li><code>aihint validate</code> \u2014 Validate a hint file</li> <li><code>aihint verify</code> \u2014 Verify a hint's signature</li> <li><code>aihint info</code> \u2014 Show hint details</li> <li><code>aihint sign</code> \u2014 Sign an existing hint file</li> </ul> <p>See <code>README.md</code> for usage examples. </p>"}]}